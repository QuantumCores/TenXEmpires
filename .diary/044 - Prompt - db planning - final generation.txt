You are a database architect tasked with designing a PostgreSQL database schema based on information provided from a planning session, the Product Requirements Document (PRD), and the technology stack. Your goal is to design an efficient and scalable database structure that meets the projectâ€™s requirements.

1. 
<prd> ./.ai/prd.md </prd>
This is the Product Requirements Document, which defines the project's features, functionalities, and requirements.

2. Use above conversation and summary from the database schema planning session. They may contain important decisions, considerations, and specific requirements discussed during the meeting.

3. 
<tech_stack> ./.ai/tech-stack.md </tech_stack>
Describes the technology stack that will be used in the project, which may influence decisions regarding the database design.

---

Follow these steps to create the database schema:

1. Thoroughly analyze the session notes to identify key entities, attributes, and relationships discussed during the planning session.

2. Review the PRD to ensure that all required features and functionalities are supported by the database schema.

3. Analyze the technology stack and ensure the database design is optimized for the chosen technologies.

4. Create a comprehensive database schema that includes:
   a. Tables with appropriate column names and data types
   b. Primary and foreign keys
   c. Indexes to improve query performance
   d. Any necessary constraints (e.g., uniqueness, not null)

5. Define relationships between tables, specifying cardinality (one-to-one, one-to-many, many-to-many) and any join tables required for many-to-many relationships.

6. Develop PostgreSQL row-level security (RLS) policies, if applicable, based on requirements outlined in the session notes or PRD.

7. Ensure the schema follows best practices in database design, including normalization to an appropriate level (usually 3NF unless denormalization is justified for performance).

---

The final output should have the following structure:

```markdown
1. List of tables with their columns, data types, and constraints  
2. Relationships between tables  
3. Indexes  
4. PostgreSQL policies (if applicable)  
5. Any additional notes or explanations regarding design decisions  
6. Database schema as a mermaid diagram
```

The response should include only the final database schema in markdown format, which will be saved in the file `.ai/db-plan.md`, without including the thought process or intermediate steps. Ensure that the schema is comprehensive, well-organized, and ready to be used as a foundation for building database migrations.
